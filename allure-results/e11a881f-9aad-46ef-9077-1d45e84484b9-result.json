{"name": "test_create_order_without_auth", "status": "skipped", "statusDetails": {"message": "XFAIL Ожидается ошибка, но API возвращает 200\n\nAssertionError: Ожидался код ответа 401, но получен 200, тело ответа: {\"success\":true,\"name\":\"Бессмертный флюоресцентный бургер\",\"order\":{\"number\":5030}}\nassert 200 == 401\n +  where 200 = <Response [200]>.status_code", "trace": "self = <tests.test_create_order.TestOrderCreation object at 0x000001A72A849DF0>\nget_ingredients = ['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa70', '61c0c5a71d1f82001bdaaa71', '61c0c5a71d1f82001bdaaa72', '61c0c5a71d1f82001bdaaa6e', ...]\n\n    @allure.step(\"Создание заказа без авторизации\")\n    @pytest.mark.xfail(reason=\"Ожидается ошибка, но API возвращает 200\")\n    def test_create_order_without_auth(self, get_ingredients):\n        \"\"\"Тест на создание заказа без авторизации\"\"\"\n        create_order = CreateOrder()\n    \n        order_data = {\"ingredients\": get_ingredients[:2]}\n        response = create_order.create_without_auth(order_data)\n    \n>       assert response.status_code == 401, f\"Ожидался код ответа 401, но получен {response.status_code}, тело ответа: {response.text}\"\nE       AssertionError: Ожидался код ответа 401, но получен 200, тело ответа: {\"success\":true,\"name\":\"Бессмертный флюоресцентный бургер\",\"order\":{\"number\":5030}}\nE       assert 200 == 401\nE        +  where 200 = <Response [200]>.status_code\n\ntests\\test_create_order.py:29: AssertionError"}, "description": "Тест на создание заказа без авторизации", "steps": [{"name": "Создание заказа без авторизации", "status": "failed", "statusDetails": {"message": "AssertionError: Ожидался код ответа 401, но получен 200, тело ответа: {\"success\":true,\"name\":\"Бессмертный флюоресцентный бургер\",\"order\":{\"number\":5030}}\nassert 200 == 401\n +  where 200 = <Response [200]>.status_code\n", "trace": "  File \"C:\\Users\\funny\\PycharmProjects\\Diplom_2\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Users\\funny\\PycharmProjects\\Diplom_2\\venv\\tests\\test_create_order.py\", line 29, in test_create_order_without_auth\n    assert response.status_code == 401, f\"Ожидался код ответа 401, но получен {response.status_code}, тело ответа: {response.text}\"\n"}, "parameters": [{"name": "get_ingredients", "value": "['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa70', '61c0c5a71d1f82001bdaaa71', '61c0c5a71d1f82001bdaaa72', '61c0c5a71d1f82001bdaaa6e', '61c0c5a71d1f82001bdaaa73', '61c0c5a71d1f82001bdaaa74', '61c0c5a71d1f82001bdaaa6c', '61c0c5a71d1f82001bdaaa75', '61c0c5a71d1f82001bdaaa76', '61c0c5a71d1f82001bdaaa77', '61c0c5a71d1f82001bdaaa78', '61c0c5a71d1f82001bdaaa79', '61c0c5a71d1f82001bdaaa7a']"}], "start": 1729691613087, "stop": 1729691614248}], "start": 1729691613087, "stop": 1729691614249, "uuid": "1a7a6493-f16f-4c97-8f4d-6ec4a3c7ad4f", "historyId": "e59632bb0f6aee995cb3a181f5f74686", "testCaseId": "e59632bb0f6aee995cb3a181f5f74686", "fullName": "tests.test_create_order.TestOrderCreation#test_create_order_without_auth", "labels": [{"name": "story", "value": "Создание заказов"}, {"name": "feature", "value": "Управление заказами"}, {"name": "tag", "value": "@pytest.mark.xfail(reason='Ожидается ошибка, но API возвращает 200')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestOrderCreation"}, {"name": "host", "value": "DESKTOP-N041KP4"}, {"name": "thread", "value": "22148-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}